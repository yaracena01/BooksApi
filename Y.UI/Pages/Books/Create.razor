@page "/Books/Create"
@using Y.DataModels
@using Y.UI.Services
@inject NavigationManager Navigation
@inject IBookService _bookService
@inject IToastService toastServices
<h3>Add Book</h3>
<hr />
<form action="/" method="post">
    <input type="hidden" name="id" @bind="book.id" />
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label class="control-label" for="title">Title</label>
                <input type="text" class="form-control" name="title" @bind="@book.title" />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label class="control-label" for="title">Description</label>
                <input type="text" class="form-control" name="description" @bind="@book.description" />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <input type="button" class="btn btn-primary" @onclick="CreateBook" value="Save" />
                <input type="button" class="btn btn-primary" @onclick="Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</form>
@code {
    Book book = new Book();
    protected async Task CreateBook()
    {
        var result = await _bookService.CreateBooks(book);
        if (result.statusCode == 201)
        {
            var data2 = (Book)result.data;
            toastServices.ShowSuccess($"The {data2.title} book was successfully created");
            Navigation.NavigateTo("Books");
        }
        else
        {
            toastServices.ShowError($"an error occurred trying to create the book. StatusCode: {result.statusCode}, Message: {result.error}" );
        }


    }
    protected void Cancel()
    {
        Navigation.NavigateTo("Books");
    }
}
